const chars = new Uint8Array([
    124,
    198,
    198,
    198,
    198,
    198,
    124,
    0,
    24,
    56,
    24,
    24,
    24,
    24,
    60,
    0,
    120,
    204,
    24,
    48,
    96,
    192,
    252,
    0,
    124,
    198,
    6,
    60,
    6,
    198,
    124,
    0,
    204,
    204,
    204,
    254,
    12,
    12,
    12,
    0,
    254,
    192,
    192,
    124,
    6,
    198,
    124,
    0,
    124,
    198,
    192,
    252,
    198,
    198,
    124,
    0,
    254,
    6,
    12,
    24,
    48,
    96,
    192,
    0,
    124,
    198,
    198,
    124,
    198,
    198,
    124,
    0,
    124,
    198,
    198,
    126,
    6,
    198,
    124,
    0,
    0,
    24,
    12,
    254,
    12,
    24,
    0,
    0,
    60,
    102,
    12,
    24,
    24,
    0,
    24,
    0,
    56,
    108,
    198,
    198,
    254,
    198,
    198,
    0,
    252,
    198,
    198,
    252,
    198,
    198,
    252,
    0,
    124,
    198,
    192,
    192,
    192,
    198,
    124,
    0,
    252,
    198,
    198,
    198,
    198,
    198,
    252,
    0,
    254,
    192,
    192,
    248,
    192,
    192,
    254,
    0,
    254,
    192,
    192,
    248,
    192,
    192,
    192,
    0,
    124,
    198,
    192,
    192,
    206,
    198,
    126,
    0,
    198,
    198,
    198,
    254,
    198,
    198,
    198,
    0,
    60,
    24,
    24,
    24,
    24,
    24,
    60,
    0,
    6,
    6,
    6,
    6,
    6,
    198,
    124,
    0,
    198,
    204,
    216,
    240,
    216,
    204,
    198,
    0,
    192,
    192,
    192,
    192,
    192,
    192,
    254,
    0,
    198,
    238,
    254,
    214,
    198,
    198,
    198,
    0,
    198,
    230,
    246,
    254,
    222,
    206,
    198,
    0,
    124,
    198,
    198,
    198,
    198,
    198,
    124,
    0,
    252,
    198,
    198,
    252,
    192,
    192,
    192,
    0,
    124,
    198,
    198,
    198,
    222,
    204,
    118,
    0,
    252,
    198,
    198,
    252,
    216,
    204,
    198,
    0,
    124,
    198,
    192,
    124,
    6,
    198,
    124,
    0,
    126,
    24,
    24,
    24,
    24,
    24,
    24,
    0,
    198,
    198,
    198,
    198,
    198,
    198,
    124,
    0,
    198,
    198,
    198,
    198,
    198,
    108,
    56,
    0,
    198,
    198,
    198,
    214,
    254,
    238,
    198,
    0,
    198,
    198,
    108,
    56,
    108,
    198,
    198,
    0,
    102,
    102,
    102,
    60,
    24,
    24,
    24,
    0,
    126,
    6,
    12,
    24,
    48,
    96,
    126,
    0,
    0,
    0,
    0,
    126,
    0,
    0,
    0,
    0,
    0,
    0,
    124,
    0,
    124,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    56,
    56,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    0,
    126,
    0,
    24,
    0,
    0,
    0,
    102,
    60,
    24,
    60,
    102,
    0,
    0,
    0,
    24,
    24,
    126,
    24,
    24,
    0,
    0,
  ]);
  
  const charMap: { [character: string]: number } = {
    '0': 0,
    '1': 1,
    '2': 2,
    '3': 3,
    '4': 4,
    '5': 5,
    '6': 6,
    '7': 7,
    '8': 8,
    '9': 9,
    '>': 10,
    '?': 11,
    a: 12,
    b: 13,
    c: 14,
    d: 15,
    e: 16,
    f: 17,
    g: 18,
    h: 19,
    i: 20,
    j: 21,
    k: 22,
    l: 23,
    m: 24,
    n: 25,
    o: 26,
    p: 27,
    q: 28,
    r: 29,
    s: 30,
    t: 31,
    u: 32,
    v: 33,
    w: 34,
    x: 35,
    y: 36,
    z: 37,
    '-': 38,
    '=': 39,
    '.': 40,
    ' ': 41,
    '/': 42,
    '*': 43,
    '+': 44,
  };

  export const SystemFont: string = 'SystemFont';
  
  export function renderText(
    text: string,
    color: string,
    size: number,
    context: CanvasRenderingContext2D,
    position: [number, number],
    colorMap?: Array<string>
  ): void {
    context.save();
    context.fillStyle = color;
    context.translate(Math.floor(position[0]), Math.floor(position[1]));
    for (let offsets of Array.from(text).map((v, iV) => [iV, charMap[v]])) {
      const charOffset = offsets[0] * 8 * size;
      if (colorMap && colorMap.length === text.length && colorMap[offsets[0]]) {
        context.fillStyle = colorMap[offsets[0]];
      }
      for (let i = 0; i < 8; i++) {
        const byte = chars[i + offsets[1] * 8];
        for (let bit = 0; bit < 8; bit++) {
          const pixelToTheRight: boolean =
            bit < 7 && (byte & Math.pow(2, bit + 1)) === Math.pow(2, bit + 1);
          if ((byte & Math.pow(2, bit)) === Math.pow(2, bit)) {
            context.fillRect(
              (7 - bit) * size + charOffset - (pixelToTheRight ? size : 0),
              i * size,
              size * (pixelToTheRight ? 2 : 1),
              size
            );
            context.fillRect((7 - bit) * size + charOffset, i * size, size, size);
          }
        }
      }
    }
    context.restore();
  }
  